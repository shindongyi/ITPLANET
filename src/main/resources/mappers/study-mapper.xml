<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="studyMapper">

	<resultMap type="Study" id="studyResultSet">
		<id property="sId" column="S_ID"/>
		<result property="sTitle" column="S_TITLE"/>
		<result property="sMember" column="S_MEMBER"/>
		<result property="sContent" column="S_CONTENT"/>
		<result property="sCount" column="S_COUNT"/>
		<result property="sCategory" column="S_CATEGORY"/>
		<result property="sCaName" column="S_CANAME"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="status" column="STATUS"/>
		<result property="sWriter" column="USER_ID"/>
		<result property="sLocation" column="S_LOCATION"/>
	</resultMap>
	
	<resultMap type="Study" id="studyResultSet2">
		<id property="sId" column="S_ID"/>
		<result property="sTitle" column="S_TITLE"/>
		<result property="sMember" column="S_MEMBER"/>
		<result property="sContent" column="S_CONTENT"/>
		<result property="sCount" column="S_COUNT"/>
		<result property="sCategory" column="S_CATEGORY"/>
		<result property="sCaName" column="S_CANAME"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="status" column="STATUS"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="lName" column="L_NAME"/>
		<result property="chatMember" column="CHAT_MEMBER"/>
	</resultMap>
	
	<resultMap type="Study" id="studyResultSet3">
		<id property="sId" column="S_ID"/>
		<result property="sTitle" column="S_TITLE"/>
		<result property="sMember" column="S_MEMBER"/>
		<result property="sContent" column="S_CONTENT"/>
		<result property="sCount" column="S_COUNT"/>
		<result property="sCategory" column="S_CATEGORY"/>
		<result property="sCaName" column="S_CANAME"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="status" column="STATUS"/>
		<result property="sWriter" column="USER_ID"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="sLocation" column="S_LOCATION"/>
		<result property="lName" column="L_NAME"/>
	</resultMap>
	
	<resultMap type="StudyReply" id="studyReplyResult">
		<id property="srId" column="SR_ID"/>
		<result property="srContent" column="SR_CONTENT"/>
		<result property="srCreateDate" column="SR_CREATE_DATE"/>
		<result property="srModifyDate" column="SR_MODIFY_DATE"/>
		<result property="status" column="STATUS"/>
		<result property="sId" column="S_ID"/>
		<result property="srWriter" column="NICKNAME"/>
	</resultMap>
	
	<resultMap type="Local" id="localResult">
		<id property="lCode" column="L_CODE"/>
		<result property="lName" column="L_NAME"/>
	</resultMap>
	
	<select id="selectLocal" resultMap="localResult">
		select *
		from local
	</select>
	
	<insert id="insertStudy" parameterType="Study">
		insert into study
		values (SEQ_SID.NEXTVAL, #{sTitle}, #{sMember}, #{sContent}, default, #{sCategory}, #{sCaName}, sysdate, sysdate, default, #{sLocation}, #{sWriter})
	</insert>
	
	<select id="getListCount" resultType="_int">
		select count(*)
		from study
		where status = 'Y'
	</select>
	
	<select id="selectStudy" resultMap="studyResultSet2">
		select s_id, s_title, s_member, s_content, s_count, s_category, s_caname, study.create_date as CREATE_DATE, study.modify_date as MODIFY_DATE, study.status as STATUS, nickname, l_name, chat_member
		from study
		join member using(user_id)
		join local on(l_code = s_location)
		join studychat using(s_id)
		where study.status = 'Y'
		order by s_id desc
	</select>
	
	<select id="studyDetail" parameterType="_int" resultMap="studyResultSet3">
		select s_id, s_title, s_member, s_content, s_count, s_category, s_caname, study.create_date as CREATE_DATE, study.modify_date as MODIFY_DATE, study.status as STATUS, user_id, nickname, s_location, l_name
		from study
		join member using(user_id)
		join local on(l_code = s_location)
		where study.status = 'Y' and s_id=#{sId}
	</select>
	
	<update id="deleteStudy" parameterType="_int">
		update study
		set status = 'N'
		where s_id =#{sId}
	</update>
	
	<insert id="createChat" parameterType="map">
		insert into studychat
		values(seq_sid.currval, #{ cname}, #{ nickName})
	</insert>
	
	<update id="updateStudy" parameterType="Study">
		update study
		set s_title=#{sTitle} , s_member=#{sMember}, s_content = #{sContent}, s_category=#{sCategory}, s_caname=#{sCaName}, modify_date = sysdate, s_location = #{sLocation}
		where s_id=#{sId}
	</update>
	
	<update id="addReadCount" parameterType="_int">
		update study
		set s_count = s_count+1
		where s_id=#{sId}
	</update>
	
	<select id="chatMember" parameterType="_int" resultType="string">
		select chat_Member
		from studychat
		where s_id=#{sId}
	</select>
	
	<update id="studyAdd" parameterType="map">
		update studychat
		set chat_member = chat_member || ',' || #{nickname}
		where s_id = #{sId}
	</update>
	
	<update id="studyCancel" parameterType="map">
		update studychat
		set chat_member = #{chatMember}
		where s_id = #{sId}
	</update>
	
	<select id="studyRepleList" parameterType="_int" resultMap="studyReplyResult">
		select sr_id, sr_content, sr_create_date, sr_modify_date, studyReply.status as status, s_id, nickname
		from studyReply
		join member using(user_id)
		where s_id =#{sId}
	</select>
	
	<insert id="addReply" parameterType="StudyReply">
		insert into studyreply
		values(seq_srid.nextval, #{srContent}, sysdate, sysdate, default, #{sId}, #{srWriter})
	</insert>
	
	<select id="searchResultListCount" parameterType="map" resultType="_int">
		select count(*)
		from study
		join member using(user_id)
		join local on(s_location = l_code)
		where study.status='Y'
		<if test='!result1.equals("x") and !result2.equals("x")'>
			<if test='result1.equals("title")'>
				and s_title like '%' || #{result2} || '%'
			</if>
			<if test='result1.equals("content")'>
				and s_content like '%' || #{result2} || '%'
			</if>
			<if test='result1.equals("writer")'>
				and nickname = #{result2}
			</if>
		</if>
		<if test='!result3.equals("x")'>
			and s_category = #{result3} and s_caname = #{result4}
		</if>
		<if test='!result5.equals("x")'>
			and l_name = #{result5}
		</if>
	</select>
	
	<select id="selectSearchResultList" parameterType="map" resultMap="studyResultSet2">
		select s_id, s_title, s_member, s_content, s_count, s_category, s_caname, study.create_date as CREATE_DATE, study.modify_date as MODIFY_DATE, study.status as STATUS, nickname, l_name, chat_member
		from study
		join member using(user_id)
		join local on(l_code = s_location)
		join studychat using(s_id)
		where study.status = 'Y'
		<if test='!result1.equals("x") and !result2.equals("x")'>
			<if test='result1.equals("title")'>
				and s_title like '%' || #{result2} || '%'
			</if>
			<if test='result1.equals("content")'>
				and s_content like '%' || #{result2} || '%'
			</if>
			<if test='result1.equals("writer")'>
				and nickname = #{result2}
			</if>
		</if>
		<if test='!result3.equals("x")'>
			and s_category = #{result3} and s_caname = #{result4}
		</if>
		<if test='!result5.equals("x")'>
			and l_name = #{result5}
		</if>
		order by s_id desc
	</select>
	
	<resultMap type="StudyChat" id="StudyChatResult">
		<id property="sId" column="S_ID"/>
		<result property="chatRoom" column="CHAT_ROOM"/>
		<result property="chatMember" column="CHAT_MEMBER"/>
		<result property="sTitle" column="S_TITLE"/>
		<result property="sCategory" column="S_CATEGORY"/>
		<result property="sCaname" column="S_CANAME"/>
	</resultMap>
	
	<select id="getChatList" parameterType="string" resultMap="StudyChatResult">
		select s_id, chat_room, chat_member, s_title, s_category, s_caname
		from studychat
		join study using(s_id)
		where chat_member like '%'|| #{nickName} ||'%'
		order by s_id desc
	</select>
	
	<select id="getChatListCount" parameterType="string" resultType="_int">
		select count(*)
		from studychat
		where chat_member like '%' || #{nickName} || '%'
	</select>
	
	<select id="getLicense" resultType="string">
		select l_name
		from license
		where end_date >= sysdate
	</select>
	
	<select id="getCompetition" resultType="string">
		select c_title
		from competition
		where c_status = 'Y' and c_check='Y' and c_startdate >= sysdate
	</select>
	
</mapper>
